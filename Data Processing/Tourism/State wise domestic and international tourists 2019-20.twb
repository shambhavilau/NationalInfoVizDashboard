<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0525.0851                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0525.0851)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='State wise domestic and international tourists 2019-20' inline='true' name='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='State wise domestic and international tourists 2019-20' name='textscan.18utd1v01bggpt0zoy3br08eikaz'>
            <connection class='textscan' directory='C:/Users/Shambhavi/Desktop/syllabus amity/NTCC/Major - Minor Project/Work/Dataset/Minor Project Dataset/Tourism' filename='State wise domestic and international tourists 2019-20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18utd1v01bggpt0zoy3br08eikaz' name='State wise domestic and international tourists 2019-20.csv' table='[State wise domestic and international tourists 2019-20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='States/Uts' ordinal='0' />
            <column datatype='integer' name='Domestic -2019' ordinal='1' />
            <column datatype='integer' name='Foreign - 2019' ordinal='2' />
            <column datatype='integer' name='Domestic -2020' ordinal='3' />
            <column datatype='integer' name='Foreign - 2020' ordinal='4' />
            <column datatype='real' name='Growth rate - DomestivTourisVisit  2020/19' ordinal='5' />
            <column datatype='real' name='Growth rate - ForeignTouristVisit 2020/19' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18utd1v01bggpt0zoy3br08eikaz' name='State wise domestic and international tourists 2019-20.csv' table='[State wise domestic and international tourists 2019-20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='States/Uts' ordinal='0' />
            <column datatype='integer' name='Domestic -2019' ordinal='1' />
            <column datatype='integer' name='Foreign - 2019' ordinal='2' />
            <column datatype='integer' name='Domestic -2020' ordinal='3' />
            <column datatype='integer' name='Foreign - 2020' ordinal='4' />
            <column datatype='real' name='Growth rate - DomestivTourisVisit  2020/19' ordinal='5' />
            <column datatype='real' name='Growth rate - ForeignTouristVisit 2020/19' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States/Uts</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States/Uts]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>States/Uts</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic -2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Domestic -2019]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Domestic -2019</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign - 2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Foreign - 2019]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Foreign - 2019</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic -2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Domestic -2020]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Domestic -2020</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign - 2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Foreign - 2020]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Foreign - 2020</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth rate - DomestivTourisVisit  2020/19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Growth rate - DomestivTourisVisit  2020/19]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Growth rate - DomestivTourisVisit  2020/19</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth rate - ForeignTouristVisit 2020/19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Growth rate - ForeignTouristVisit 2020/19]</local-name>
            <parent-name>[State wise domestic and international tourists 2019-20.csv]</parent-name>
            <remote-alias>Growth rate - ForeignTouristVisit 2020/19</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total 2019' datatype='integer' name='[Calculation_1565282397347028992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Domestic -2019]+[Foreign - 2019]' />
      </column>
      <column caption='Total 2020' datatype='integer' name='[Calculation_1565282397347176449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Domestic -2020]+[Foreign - 2020]' />
      </column>
      <column datatype='integer' name='[Domestic -2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Domestic -2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Foreign - 2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Foreign - 2020]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='State wise domestic and international tourists 2019-20.csv' datatype='table' name='[__tableau_internal_object_id__].[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1565282397347028992]' derivation='Sum' name='[sum:Calculation_1565282397347028992:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1565282397347176449]' derivation='Sum' name='[sum:Calculation_1565282397347176449:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic -2019]' derivation='Sum' name='[sum:Domestic -2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Domestic -2020]' derivation='Sum' name='[sum:Domestic -2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Foreign - 2019]' derivation='Sum' name='[sum:Foreign - 2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Foreign - 2020]' derivation='Sum' name='[sum:Foreign - 2020:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Shambhavi/Desktop/syllabus amity/NTCC/Major - Minor Project/Work/Dataset/Minor Project Dataset/Tourism/State wise domestic and international tourists 2019-20 - extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2023 02:18:39 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='State wise domestic and international tourists 2019-20' increment-value='%null%' refresh-type='create' rows-inserted='38' timestamp-start='2023-05-20 14:18:38.999' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>States/Uts</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States/Uts]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States/Uts</remote-alias>
              <ordinal>0</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Domestic -2019</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Domestic -2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Domestic -2019</remote-alias>
              <ordinal>1</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Foreign - 2019</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Foreign - 2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Foreign - 2019</remote-alias>
              <ordinal>2</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Domestic -2020</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Domestic -2020]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Domestic -2020</remote-alias>
              <ordinal>3</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Foreign - 2020</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Foreign - 2020]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Foreign - 2020</remote-alias>
              <ordinal>4</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Growth rate - DomestivTourisVisit  2020/19</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Growth rate - DomestivTourisVisit  2020/19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Growth rate - DomestivTourisVisit  2020/19</remote-alias>
              <ordinal>5</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Growth rate - ForeignTouristVisit 2020/19</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Growth rate - ForeignTouristVisit 2020/19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Growth rate - ForeignTouristVisit 2020/19</remote-alias>
              <ordinal>6</ordinal>
              <family>State wise domestic and international tourists 2019-20.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#30bcad'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Calculation_1565282397347028992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2019:qk]&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2020:qk]&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Calculation_1565282397347176449:qk]&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2020:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2019:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='State wise domestic and international tourists 2019-20.csv' id='State wise domestic and international tourists 2019-20.csv_EF40322AF5DF4DDD937936BB1EC0C735'>
            <properties context=''>
              <relation connection='textscan.18utd1v01bggpt0zoy3br08eikaz' name='State wise domestic and international tourists 2019-20.csv' table='[State wise domestic and international tourists 2019-20#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='States/Uts' ordinal='0' />
                  <column datatype='integer' name='Domestic -2019' ordinal='1' />
                  <column datatype='integer' name='Foreign - 2019' ordinal='2' />
                  <column datatype='integer' name='Domestic -2020' ordinal='3' />
                  <column datatype='integer' name='Foreign - 2020' ordinal='4' />
                  <column datatype='real' name='Growth rate - DomestivTourisVisit  2020/19' ordinal='5' />
                  <column datatype='real' name='Growth rate - ForeignTouristVisit 2020/19' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='2019'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Domestic &amp; International Tourists 2019</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State wise domestic and international tourists 2019-20' name='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v'>
            <column datatype='integer' name='[Domestic -2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Foreign - 2019]' role='measure' type='quantitative' />
            <column datatype='string' name='[States/Uts]' role='dimension' type='nominal' />
            <column-instance column='[States/Uts]' derivation='None' name='[none:States/Uts:nk]' pivot='key' type='nominal' />
            <column-instance column='[Domestic -2019]' derivation='Sum' name='[sum:Domestic -2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foreign - 2019]' derivation='Sum' name='[sum:Foreign - 2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;A&amp;N Island&quot;' function='range' level='[none:States/Uts:nk]' to='&quot;Goa&quot;' />
              <groupfilter from='&quot;Gujarat&quot;' function='range' level='[none:States/Uts:nk]' to='&quot;West Bengal&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2019:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2019:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.637182354927063' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</rows>
        <cols>([federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2019:qk] + [federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2019:qk])</cols>
      </table>
      <simple-id uuid='{18197090-FC6D-44A4-A921-45F28FB7D054}' />
    </worksheet>
    <worksheet name='2020'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>Domestic &amp; International Tourists 2020</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State wise domestic and international tourists 2019-20' name='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v'>
            <column datatype='integer' name='[Domestic -2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Foreign - 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[States/Uts]' role='dimension' type='nominal' />
            <column-instance column='[States/Uts]' derivation='None' name='[none:States/Uts:nk]' pivot='key' type='nominal' />
            <column-instance column='[Domestic -2020]' derivation='Sum' name='[sum:Domestic -2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foreign - 2020]' derivation='Sum' name='[sum:Foreign - 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2020:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2020:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2020:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</rows>
        <cols>([federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Domestic -2020:qk] + [federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Foreign - 2020:qk])</cols>
      </table>
      <simple-id uuid='{B239A8D3-9858-4695-958F-3D9220AEFBFF}' />
    </worksheet>
    <worksheet name='State wise contributions 19,20'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='18'>State wise Total Tourism 2019-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State wise domestic and international tourists 2019-20' name='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0i0aaqs0dsbrcf1h8ow4917mpj4v'>
            <column caption='Total 2019' datatype='integer' name='[Calculation_1565282397347028992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Domestic -2019]+[Foreign - 2019]' />
            </column>
            <column caption='Total 2020' datatype='integer' name='[Calculation_1565282397347176449]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Domestic -2020]+[Foreign - 2020]' />
            </column>
            <column datatype='integer' name='[Domestic -2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Domestic -2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Foreign - 2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Foreign - 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[States/Uts]' role='dimension' type='nominal' />
            <column-instance column='[States/Uts]' derivation='None' name='[none:States/Uts:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1565282397347028992]' derivation='Sum' name='[sum:Calculation_1565282397347028992:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1565282397347176449]' derivation='Sum' name='[sum:Calculation_1565282397347176449:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Calculation_1565282397347028992:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[sum:Calculation_1565282397347176449:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;A&amp;N Island&quot;' function='range' level='[none:States/Uts:nk]' to='&quot;Goa&quot;' />
              <groupfilter from='&quot;Gujarat&quot;' function='range' level='[none:States/Uts:nk]' to='&quot;West Bengal&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]</column>
            <column>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[Multiple Values]</rows>
        <cols>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</cols>
      </table>
      <simple-id uuid='{42A0D3E5-207A-48AC-9709-2126E428A482}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='43125' id='5' param='horz' type-v2='layout-flow' w='99000' x='500' y='1000'>
            <zone h='43125' id='3' type-v2='layout-basic' w='99000' x='500' y='1000'>
              <zone h='43125' id='1' name='2019' w='49500' x='500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43125' id='7' name='2020' w='49500' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='54875' id='8' name='State wise contributions 19,20' w='99000' x='500' y='44125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{FFE3BBED-0C6B-4E8C-BDDF-FFA2C0D6A5C5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{69018DC3-B1A9-496B-AC70-75756EE29FAD}' />
    </window>
    <window class='worksheet' name='2020'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49C105AE-0FFC-48CF-9E87-C9D03A542553}' />
    </window>
    <window class='worksheet' name='State wise contributions 19,20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[:Measure Names]</field>
            <field>[federated.0i0aaqs0dsbrcf1h8ow4917mpj4v].[none:States/Uts:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D40B3F6A-A6A0-4476-B4F5-E9C5DA217F79}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='2019' />
        <viewpoint name='2020' />
        <viewpoint name='State wise contributions 19,20'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{340B42F2-9116-4065-BA8C-9645B928663F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2019' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2020' width='192'>
      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
      Kf911KoSwm8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      u3bR1tY2/i+azB1kE/aP4A3mO9kixwvPvzSl+Cbjqd8/wdRDgSQJdO7ewc6O7vHdUYlIgE2b
      t5LOvXuzc+k4g27v+O+gx83mrTvIiQcP3IV8I2zcuInI3kPKkETad2xlyBOYks1C44A9wdve
      /Bt3/+L35NJRnn1lHR8481QevPs7LD5jDeYJVg2lvV386LGXOPe01YeWukJFWVlxx5dseeef
      rF/3Bk888zoGNTS0rsRiODBTba/+he1eJcuaJvoQdoaf3f8I5605t+j4iqGsbOpfsbzvO7ez
      vdfLtnUvsrE/xbF1Jq654XZymTi/fuJZLjj/A+xY/wpf++odjGQsnLZ6GV2bXue7P36EeGCI
      3z/7T9Z84IzxdLeve567H3yCTCLEz372a8778Id55J47+Ff7MM899Vtci08g1LVuUpsa1+Qf
      Ipl3SPvx3GMPSHf//DEpEElIkiRJW//1grTm3PdLl11+pfR/r7VJTz/xsHTllVdKn730c9KO
      Pp9099euls5dc5F05fVfkxKpiHTHl6+TvvTFy6QfPvTkeJwP3/01acMev7Tub49Jn7/x25Ik
      SdJtN94gJYWkdNMNX5EkISV946arpSuuuEJae8+DkpiJS2tvu0G6/EtfkP7rp7/dP3tSsHuD
      9JUfPLj3lyA9cOcd0hcvv1y6+j9vl4LeAenTH/+w9NFPfkb6/k8flXq3rZOuvPJK6XOXflZ6
      /Jk3JEnam16x8SWz0g++cqXUHRyz+/ZPfisN7/intPaun0o3XH2F1LbbLd1w002SJAnS3d+4
      Sbr8iiukm9feI0lSUvrcxz4s3fLlG6WPf/pS6TvfvEP69Cc+Lv39nV3j6aZSKUmSJGlg6+vS
      7Xc9KL301EPSY39bJ0mSJN3/3Zultu6g1L5ru7TrrRelHzz4lCRJkvT4/d+TXtvSL0mSJP3o
      GzdK7Z7kQfEJ2aR041VflHzRoPSlq26WREmSRnevk77yg4eKslmIHNAF+uAnLqPeGOfmay/n
      +w/8Dyve9yHOOWEld/70QS4+63hOPuMDnH7qySyqLuGtjdu4/vrrOOGci3nwv/+L3W++iKpy
      OVdfcx0db75AdG9LfsopJ7FhQxub290cW2MkEBwCWx3j20+lLG5PmONOOIVLPnkxuze8RsrW
      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
    </thumbnail>
    <thumbnail height='192' name='State wise contributions 19,20' width='192'>
      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
      zbEuAmMK4nEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
